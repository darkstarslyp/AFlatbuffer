// automatically generated by the FlatBuffers compiler, do not modify

package com.demon.fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AppInfo extends Table {
  public static AppInfo getRootAsAppInfo(ByteBuffer _bb) { return getRootAsAppInfo(_bb, new AppInfo()); }
  public static AppInfo getRootAsAppInfo(ByteBuffer _bb, AppInfo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public AppInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String symbolId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer symbolIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer symbolIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String model() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer modelAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer modelInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String systemVersion() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer systemVersionAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer systemVersionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String brand() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer brandAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer brandInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public String cpuArchitecture() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer cpuArchitectureAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer cpuArchitectureInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public boolean isRoot() { int o = __offset(14); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public long memorySize() { int o = __offset(16); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long freeMemorySize() { int o = __offset(18); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String processName() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer processNameAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer processNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }

  public static int createAppInfo(FlatBufferBuilder builder,
      int symbolIdOffset,
      int modelOffset,
      int systemVersionOffset,
      int brandOffset,
      int cpuArchitectureOffset,
      boolean isRoot,
      long memorySize,
      long freeMemorySize,
      int processNameOffset) {
    builder.startObject(9);
    AppInfo.addFreeMemorySize(builder, freeMemorySize);
    AppInfo.addMemorySize(builder, memorySize);
    AppInfo.addProcessName(builder, processNameOffset);
    AppInfo.addCpuArchitecture(builder, cpuArchitectureOffset);
    AppInfo.addBrand(builder, brandOffset);
    AppInfo.addSystemVersion(builder, systemVersionOffset);
    AppInfo.addModel(builder, modelOffset);
    AppInfo.addSymbolId(builder, symbolIdOffset);
    AppInfo.addIsRoot(builder, isRoot);
    return AppInfo.endAppInfo(builder);
  }

  public static void startAppInfo(FlatBufferBuilder builder) { builder.startObject(9); }
  public static void addSymbolId(FlatBufferBuilder builder, int symbolIdOffset) { builder.addOffset(0, symbolIdOffset, 0); }
  public static void addModel(FlatBufferBuilder builder, int modelOffset) { builder.addOffset(1, modelOffset, 0); }
  public static void addSystemVersion(FlatBufferBuilder builder, int systemVersionOffset) { builder.addOffset(2, systemVersionOffset, 0); }
  public static void addBrand(FlatBufferBuilder builder, int brandOffset) { builder.addOffset(3, brandOffset, 0); }
  public static void addCpuArchitecture(FlatBufferBuilder builder, int cpuArchitectureOffset) { builder.addOffset(4, cpuArchitectureOffset, 0); }
  public static void addIsRoot(FlatBufferBuilder builder, boolean isRoot) { builder.addBoolean(5, isRoot, false); }
  public static void addMemorySize(FlatBufferBuilder builder, long memorySize) { builder.addLong(6, memorySize, 0L); }
  public static void addFreeMemorySize(FlatBufferBuilder builder, long freeMemorySize) { builder.addLong(7, freeMemorySize, 0L); }
  public static void addProcessName(FlatBufferBuilder builder, int processNameOffset) { builder.addOffset(8, processNameOffset, 0); }
  public static int endAppInfo(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

